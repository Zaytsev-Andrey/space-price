version: '3'

services:
#  analyzer-backend-api-app:
#    image: geekteam/analyzer-backend-api-app:latest
#    ports:
#      - 8080:8080
#
#  frontend:
#    image: geekteam/frontend
#    ports:
#      - 80:80
#    depends_on:
#      - analyzer-backend-api-app
#
#  db:
#    image: mongo
#    restart: always
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: root
#      MONGO_INITDB_ROOT_PASSWORD: example
#    ports:
#      - 27017:27017
#    volumes:
#      - mongodb-data:/var/lib/mongodb

  postgres:
    image: 'postgres:latest'
    container_name: postgres
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    volumes:
      - keycloak-db:/var/lib/postgresql/data

  keycloak:
    image: 'jboss/keycloak:14.0'
    container_name: keycloak
    restart: always
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: password
    ports:
      - 8040:8080
    depends_on:
      - postgres

  rabbitmq:
    image: 'rabbitmq:3-management'
    ports:
      - 5672:5672
      - 15672:15672
#      - 61613:61613
#    command: sh -c "rabbitmq-plugins enable --offline rabbitmq_stomp && rabbitmq-server"
#    volumes:
#      - rabbitmq-data:/var/lib/rabbitmq

  redis:
    image: 'bitnami/redis:latest'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - 6379:6379

volumes:
  keycloak-db:

#  telegram-bot:
#    image: geekteam/telegram-bot
#    ports:
#      - 8090
#
#volumes:
#  mongodb-data:
#  rabbitmq-data: